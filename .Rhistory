axis.text = ggplot2::element_text(
size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX),
text = element_text(
family = "Calibri",
size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
ylim(0, 1.8) +
ggtitle(paste0("Resultados en ", tipo))
graficos <- sapply(unique(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
size = (sizeLetra + 8),
hjust = 0.5),
axis.title = ggplot2::element_text(
size = (sizeLetra + 4)),
axis.text = ggplot2::element_text(
size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX),
text = element_text(
family = "Calibri",
size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
ylim(0, 1.8) +
ggtitle(tipo)
})
graficos[[2]]
graficos <- sapply(unique(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
size = (sizeLetra + 8),
hjust = 0.5),
axis.title = ggplot2::element_text(
size = (sizeLetra + 4)),
axis.text = ggplot2::element_text(
size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX),
text = element_text(
family = "Calibri",
size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
ylim(0, 1.8) +
ggtitle(tipo))
}, simplify = F, USE.NAMES = T)
graficos[[2]]
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
archivos <- list.files(path_to_Tables)
archivos <- archivos[!grepl("\\.ini$", archivos)]
archivos <- archivos[which(archivos != "NK-cells")]
totales <- sapply(archivos, function(i){
df <- readRDS(file = paste0(path_to_Tables, i, "/sign_over_infra_genes.rds"))
df <- df[c(1,4,7), c(1, 2, 4)]
rownames(df) <- 1:nrow(df)
df$TipoClr <- rep(i, nrow(df))
return(df)
}, simplify = F)
dfTotal <- dplyr::bind_rows(totales)
dfTotal$`Total de genes comparados` <- as.numeric(dfTotal$`Total de genes comparados`)
dfTotal$`Total de genes significativos` <- as.numeric(dfTotal$`Total de genes significativos`)
dfTotal$Porcentaje <- 100*(dfTotal$`Total de genes significativos`/dfTotal$`Total de genes comparados`)
dfTotal$Comparación <- factor(dfTotal$Comparación,
levels = c("Grupo 3 - Grupo 2",
"Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"))
sizeLetra <- 9
anguloX <- 0
graficos <- sapply(unique(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
size = (sizeLetra + 8),
hjust = 0.5),
axis.title = ggplot2::element_text(
size = (sizeLetra + 4)),
axis.text = ggplot2::element_text(
size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX),
text = element_text(
family = "Calibri",
size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 1.8) +
ggtitle(tipo))
}, simplify = F, USE.NAMES = T)
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
sizeLetra <- 9
anguloX <- 65
graficos <- sapply(unique(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 1.8) +
ggtitle(tipo))
}, simplify = F, USE.NAMES = T)
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX, hjust = 1, vjust = 1),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 2) +
ggtitle(tipo)
anguloX <- 35
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX, hjust = 1, vjust = 1),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 2) +
ggtitle(tipo)
ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX, hjust = 1, vjust = 1),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 2) +
ggtitle(tipo)
unique(dfTotal$TipoClr)
dfTotal <- dplyr::bind_rows(totales)
dfTotal$`Total de genes comparados` <- as.numeric(dfTotal$`Total de genes comparados`)
dfTotal$`Total de genes significativos` <- as.numeric(dfTotal$`Total de genes significativos`)
dfTotal$Porcentaje <- 100*(dfTotal$`Total de genes significativos`/dfTotal$`Total de genes comparados`)
dfTotal$Comparación <- factor(dfTotal$Comparación,
levels = c("Grupo 3 - Grupo 2",
"Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"))
dfTotal$TipoClr <- factor(dfTotal$TipoClr,
levels = c(
"Hepatocytes",
"HSCs",
"Endothelial Cells",
"Kupffer Cells",
"T-cells",
"B-cells",
"Monocytes and Macrophages",
"Mo-DCs",
"pDCs",
"Cholangiocytes",
"Neutrophils"
# ""
), ordered = T)
levels(dfTotal$TipoClr)
View(dfTotal)
archivos <- list.files(path_to_Tables)
archivos <- archivos[!grepl("\\.ini$", archivos)]
archivos <- archivos[which(archivos != "NK-cells")]
totales <- sapply(archivos, function(i){
df <- readRDS(file = paste0(path_to_Tables, i, "/sign_over_infra_genes.rds"))
df <- df[c(1,4,7), c(1, 2, 4)]
rownames(df) <- 1:nrow(df)
df$TipoClr <- rep(i, nrow(df))
return(df)
}, simplify = F)
dfTotal <- dplyr::bind_rows(totales)
dfTotal$`Total de genes comparados` <- as.numeric(dfTotal$`Total de genes comparados`)
dfTotal$`Total de genes significativos` <- as.numeric(dfTotal$`Total de genes significativos`)
dfTotal$Porcentaje <- 100*(dfTotal$`Total de genes significativos`/dfTotal$`Total de genes comparados`)
dfNK <- data.frame(Comparación = c("Grupo 3 - Grupo 2", "Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"),
Total1 = c(1405, NA, NA),
Total2 = c(0, NA, NA),
TipoClr = rep("NK-cells", 3),
Porcentaje = c(0, NA, NA)
)
dfTotal$Comparación <- factor(dfTotal$Comparación,
levels = c("Grupo 3 - Grupo 2",
"Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"))
dfTotal$TipoClr <- factor(dfTotal$TipoClr,
levels = c(
"Hepatocytes",
"HSCs",
"Endothelial Cells",
"Kupffer Cells",
"T-cells",
"B-cells",
"Monocytes and Macrophages",
"Mo-DCs",
"pDCs",
"Cholangiocytes",
"Neutrophils",
"NK-cells"
), ordered = T)
levels(dfTotal$TipoClr)
sizeLetra <- 9
anguloX <- 35
graficos <- sapply(levels(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX, hjust = 1, vjust = 1),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 2) +
ggtitle(tipo))
}, simplify = F, USE.NAMES = T)
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
archivos <- list.files(path_to_Tables)
archivos <- archivos[!grepl("\\.ini$", archivos)]
archivos <- archivos[which(archivos != "NK-cells")]
totales <- sapply(archivos, function(i){
df <- readRDS(file = paste0(path_to_Tables, i, "/sign_over_infra_genes.rds"))
df <- df[c(1,4,7), c(1, 2, 4)]
rownames(df) <- 1:nrow(df)
df$TipoClr <- rep(i, nrow(df))
return(df)
}, simplify = F)
dfTotal <- dplyr::bind_rows(totales)
dfTotal$`Total de genes comparados` <- as.numeric(dfTotal$`Total de genes comparados`)
dfTotal$`Total de genes significativos` <- as.numeric(dfTotal$`Total de genes significativos`)
dfTotal$Porcentaje <- 100*(dfTotal$`Total de genes significativos`/dfTotal$`Total de genes comparados`)
dfNK <- data.frame(Comparación = c("Grupo 3 - Grupo 2", "Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"),
Total1 = c(1405, NA, NA),
Total2 = c(0, NA, NA),
TipoClr = rep("NK-cells", 3),
Porcentaje = c(0, NA, NA)
)
colnames(dfNK) <- colnames(dfTotal)
dfTotal <- rbind(dfTotal, dfNK)
dfTotal$Comparación <- factor(dfTotal$Comparación,
levels = c("Grupo 3 - Grupo 2",
"Grupo 2 - Grupo 1",
"Grupo 3 - Grupo 1"))
dfTotal$TipoClr <- factor(dfTotal$TipoClr,
levels = c(
"Hepatocytes",
"HSCs",
"Endothelial Cells",
"Kupffer Cells",
"T-cells",
"B-cells",
"Monocytes and Macrophages",
"Mo-DCs",
"pDCs",
"Cholangiocytes",
"Neutrophils",
"NK-cells"
), ordered = T)
levels(dfTotal$TipoClr)
sizeLetra <- 9
anguloX <- 35
graficos <- sapply(levels(dfTotal$TipoClr), function(tipo){
df <- dfTotal %>%
dplyr::filter(TipoClr == tipo)
return(ggplot(df, aes(x = Comparación, y = Porcentaje)) +
geom_bar(fill = colorPalette(n=3), stat = "identity") +
geom_text(aes(label = paste0("N = ",`Total de genes significativos`)),
vjust = -0.3) +
theme_minimal() +
theme(
axis.line = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
axis.ticks = ggplot2::element_line(
linewidth = 0.5,
colour = "black"),
plot.title = ggplot2::element_text(
# size = (sizeLetra + 8),
hjust = 0.5),
# axis.title = ggplot2::element_text(
#   size = (sizeLetra + 4)),
# axis.text = ggplot2::element_text(
#   size = (sizeLetra + 2)),
axis.text.x = ggplot2::element_text(
angle = anguloX, hjust = 1, vjust = 1),
# text = element_text(
#   family = "Calibri",
#   size = sizeLetra),
legend.position = "none") +
ylab("% genes significativos") +
xlab("") +
ylim(0, 2) +
ggtitle(tipo))
}, simplify = F, USE.NAMES = T)
gridExtra::grid.arrange(grobs = graficos, ncol = 3, nrow = 4)
shiny::runApp('C:/Users/julia/Documents/GitHub/Normalization/app')
runApp('C:/Users/julia/Documents/GitHub/Normalization/app')
shiny::runApp('C:/Users/julia/Documents/GitHub/Normalization/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
shiny::runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
runApp('C:/Users/julia/Documents/GitHub/pubmedtocsv/app')
# Setup ####
rm(list=ls())
graphics.off()
setwd("C:/Users/julia/Documents/GitHub/pubmedtocsv")
library(dplyr)
dfLabel <- readRDS(file = "PubMedIDs.rds")
source(file = "app/global.R")
# Main function from global ####
## Tranform data ####
lineas <- readLines("ejemploRNA.txt")
df <- processFile(lineas)
# Journal (JT)
length(table(df$JT))
# Journal (JT)
unique(df$YEAR)
# Journal (JT)
unique(df$JT)
table(df$JT)
table(df$JT) == 1
names(table(df$JT)[table(df$JT) == 1])
table(table(df$JT) == 1])
table(table(df$JT) == 1)
table(table(df$JT) == 20])
table(table(df$JT) == 20)
table(table(df$JT) == 20)["TRUE"]
unname(table(table(df$JT) == 20)["TRUE"])
unname(table(table(df$JT) == 1)["TRUE"])
table(df$JT)
unname(table(df$JT))
mean(unname(table(df$JT)))
median(totalByJournal)
totalByJournal <- unname(table(df$JT))
median(totalByJournal)
percent_rank(totalByJournal)
quantile(totalByJournal)
quantile(totalByJournal)["25%"]
runApp('app')
unique(df$JT)
length(unique(df$JT))
runApp('app')
runApp('app')
dfPlot <- data.frame(Years = names(table(df$YEAR)),
Frequency = as.vector(table(df$YEAR)),
Percentage = round(as.vector(prop.table(table(df$YEAR)))*100, 2))
min(dfPlot$Years)
seq(min(dfPlot$Years), max(dfPlot$Years), 1000)
seq(from = min(dfPlot$Years), to = max(dfPlot$Years), by =100)
max(dfPlot$Years)
seq(from = min(dfPlot$Years), to = max(dfPlot$Years), by =11)
seq(from = min(dfPlot$Years), to = max(dfPlot$Years), by =1)
runApp('app')
runApp('app')
View(df)
substr(df$DP, 1, 4)
substr(df$DP, 1, 4) == df$YEAR
as.numeric(substr(df$DP, 1, 4))
as.numeric(substr(c(df$DP, NA), 1, 4))
runApp('app')
