shiny::runApp()
# Libraries
library(dplyr)
library(shiny)
library(shinycustomloader)
library(bslib)
library(DT)
library(plotly)
library(Hmisc)
library(ggplot2)
# Functions
dfLabel <- readRDS("PubMedIDs.rds")
pubmedTagsAll <- dfLabel$ID
View(dfLabel)
file <- "pubmed-HPLCandwes-set.txt"
search_directory <- "pubmed-HPLCandwes-set.txt"
search_directory <- "../data/pubmed-HPLCandwes-set.txt"
lineas <- readLines(search_directory)
# search_directory <- "../data/pubmed-HPLCandwes-set.txt"
lineas <- readLines(search_directory)
df <- processFile(lineas = lineas)
View(df)
# 1) Select lines
inicio <- NA
paperList <- list()
for (i in 1:length(lineas)){
infoLinea <- lineas[i]
if (is.na(inicio)){
inicio <- i
}
if (infoLinea != ""){
next
} else if (infoLinea == ""){
final <- i-1
elemento <- list(lineas[inicio:final])
paperList <- c(paperList, elemento)
inicio <- NA
}
}
View(elemento)
View(paperList)
df <- as.data.frame(df)
dfCountry <- data.frame(Country = names(table(df$PL)),
Frequency = as.vector(table(df$PL)),
Percentage = round(as.vector(prop.table(table(df$PL)))*100, 2))
View(dfCountry)
pubmedTagsAll
table(df$PL)
dfPlot <- dfCountry %>%
dplyr::arrange(Frequency)
View(dfPlot)
nOnePub <- unname(table(table(df$PL) > 1)["TRUE"])
nOnePub
table(df$PL) > 1
View(dfCountry)
if (nrow(dfPlot) > 15) {
dfPlot <- dfPlot[1:15,]
}
dfPlot$Country <- factor(dfPlot$Country, levels = unique(dfPlot$Country))
dfPlot$Color <- colorPalette(n = nrow(dfPlot), removeWhite = TRUE)
(ggplot2::ggplot(dfPlot, ggplot2::aes(x = Country, y = Frequency,
text = paste0("Year of publication: ", Country, "\n",
"No of publications: ", Frequency, "\n",
"Percentage: ", Percentage, "%"))) +
ggplot2::geom_bar(stat = "identity", fill = dfPlot$Color) +
ggplot2::theme_minimal() +
ggplot2::theme(axis.line = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.ticks = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.text = ggplot2::element_text(size = 12),
axis.title = ggplot2::element_text(size = 15)) +
ggplot2::coord_flip() + ylab("No of publications") + xlab("")) %>%
plotly::ggplotly(., tooltip = "text", height = 600) %>%
plotly::config(modeBarButtonsToRemove = c("autoScale2d", "lasso2d",
"select2d", "pan2d"),
displaylogo = FALSE)
View(dfCountry)
df <- as.data.frame(df)
dfCountry <- data.frame(Country = names(table(df$PL)),
Frequency = as.vector(table(df$PL)),
Percentage = round(as.vector(prop.table(table(df$PL)))*100, 2))
dfPlot <- dfCountry %>%
dplyr::arrange(Frequency)
View(dfPlot)
View(dfCountry)
unique(dfPlot$Country)
if (nrow(dfPlot) > 15) {
dfPlot <- dfPlot[1:15,]
}
View(dfPlot)
df <- as.data.frame(df)
dfCountry <- data.frame(Country = names(table(df$PL)),
Frequency = as.vector(table(df$PL)),
Percentage = round(as.vector(prop.table(table(df$PL)))*100, 2))
dfPlot <- dfCountry %>%
dplyr::arrange(desc(Frequency))
if (nrow(dfPlot) > 15) {
dfPlot <- dfPlot[1:15,]
}
dfPlot$Country <- factor(dfPlot$Country, levels = unique(dfPlot$Country))
dfPlot$Color <- colorPalette(n = nrow(dfPlot), removeWhite = TRUE)
(ggplot2::ggplot(dfPlot, ggplot2::aes(x = Country, y = Frequency,
text = paste0("Year of publication: ", Country, "\n",
"No of publications: ", Frequency, "\n",
"Percentage: ", Percentage, "%"))) +
ggplot2::geom_bar(stat = "identity", fill = dfPlot$Color) +
ggplot2::theme_minimal() +
ggplot2::theme(axis.line = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.ticks = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.text = ggplot2::element_text(size = 12),
axis.title = ggplot2::element_text(size = 15)) +
ggplot2::coord_flip() + ylab("No of publications") + xlab("")) %>%
plotly::ggplotly(., tooltip = "text", height = 600) %>%
plotly::config(modeBarButtonsToRemove = c("autoScale2d", "lasso2d",
"select2d", "pan2d"),
displaylogo = FALSE)
dfPlot <- dfCountry %>%
dplyr::arrange(Frequency)
if (nrow(dfPlot) > 15) {
dfPlot <- dfPlot[(nrow(df) - 14):nrow(df),]
}
dfPlot$Country <- factor(dfPlot$Country, levels = unique(dfPlot$Country))
dfPlot$Color <- colorPalette(n = nrow(dfPlot), removeWhite = TRUE)
(ggplot2::ggplot(dfPlot, ggplot2::aes(x = Country, y = Frequency,
text = paste0("Year of publication: ", Country, "\n",
"No of publications: ", Frequency, "\n",
"Percentage: ", Percentage, "%"))) +
ggplot2::geom_bar(stat = "identity", fill = dfPlot$Color) +
ggplot2::theme_minimal() +
ggplot2::theme(axis.line = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.ticks = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.text = ggplot2::element_text(size = 12),
axis.title = ggplot2::element_text(size = 15)) +
ggplot2::coord_flip() + ylab("No of publications") + xlab("")) %>%
plotly::ggplotly(., tooltip = "text", height = 600) %>%
plotly::config(modeBarButtonsToRemove = c("autoScale2d", "lasso2d",
"select2d", "pan2d"),
displaylogo = FALSE)
dfPlot <- dfCountry %>%
dplyr::arrange(Frequency)
if (nrow(dfPlot) > 15) {
dfPlot <- dfPlot[(nrow(dfPlot) - 14):nrow(dfPlot),]
}
dfPlot$Country <- factor(dfPlot$Country, levels = unique(dfPlot$Country))
dfPlot$Color <- colorPalette(n = nrow(dfPlot), removeWhite = TRUE)
(ggplot2::ggplot(dfPlot, ggplot2::aes(x = Country, y = Frequency,
text = paste0("Year of publication: ", Country, "\n",
"No of publications: ", Frequency, "\n",
"Percentage: ", Percentage, "%"))) +
ggplot2::geom_bar(stat = "identity", fill = dfPlot$Color) +
ggplot2::theme_minimal() +
ggplot2::theme(axis.line = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.ticks = ggplot2::element_line(linewidth = 0.5, colour = "black"),
axis.text = ggplot2::element_text(size = 12),
axis.title = ggplot2::element_text(size = 15)) +
ggplot2::coord_flip() + ylab("No of publications") + xlab("")) %>%
plotly::ggplotly(., tooltip = "text", height = 600) %>%
plotly::config(modeBarButtonsToRemove = c("autoScale2d", "lasso2d",
"select2d", "pan2d"),
displaylogo = FALSE)
View(dfLabel)
runApp()
